@using Models;

<div 
    class="
        card 
        border-0 
        m-3
        @CardAnimationClass
        @CardHalfFlipStart
        @CardHalfFlipEnd"
>
    <CallbackOnCssAnimationEnd CssAnimationName="answer-reveal" OnCssAnimationCompleted="OnRevealComplete">
        <CallbackOnCssAnimationEnd CssAnimationName="half-flip-start" OnCssAnimationCompleted="OnHalfFlipStartComplete">
            <CallbackOnCssAnimationEnd CssAnimationName="half-flip-end" OnCssAnimationCompleted="OnHalfFlipEndComplete">
                    <div class="card-body p-0">
                        <div class="card-front">
                            <h1 class="card-word border-bottom border-danger bg-light">@Word.Spanish</h1>
                            <input type="text" class="card-input my-2" @bind="CurrentGuess" />
                            <button class="mt-1 btn btn-info" @onclick="Guess">Guess</button>
                        </div>
                        <div class="card-back d-flex align-items-center justify-content-center">
                            <h2>@Word.English</h2>
                        </div>
                    </div>
            </CallbackOnCssAnimationEnd>
        </CallbackOnCssAnimationEnd>
    </CallbackOnCssAnimationEnd>
</div>


@code {

    [Parameter]
    public BasicWord Word { get; set; }
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public EventCallback<int> OnCorrect { get; set; }

    public string CardAnimationClass { get; set; } = String.Empty;
    public string CardHalfFlipStart { get; set; } = String.Empty;
    public string CardHalfFlipEnd { get; set; } = String.Empty;

    ElementReference CardFront;

    public bool? IsCorrect { get; set; }
    public string CurrentGuess { get; set; }

    public async Task OnRevealComplete(string animationName)
    {
        Console.WriteLine("Invoke next call " + animationName);
        if (IsCorrect.Value)
        {
            CurrentGuess = "";
            CardHalfFlipStart = "card-half-flip-start";
        }

    }

    public async Task OnWrongAnswer()
    {
        Console.WriteLine("Wrong Answer");
        IsCorrect = null ;
    }

    public async Task OnHalfFlipStartComplete(string cssAnimationName) {
        Console.WriteLine("Fade Next " + cssAnimationName);
        await OnCorrect.InvokeAsync(Id);
        CardHalfFlipEnd = "card-half-flip-end";
    }

    public async Task OnHalfFlipEndComplete(string animationName)
    {
        IsCorrect = null;
        CardAnimationClass = SetCardAnimationClass();
        CardHalfFlipStart = String.Empty;
        CardHalfFlipEnd = String.Empty;
        Console.WriteLine("Flip Start " + animationName);
    }

    private void Guess()
    {
        IsCorrect = CurrentGuess == Word.English;
        CardAnimationClass = SetCardAnimationClass();
    }


    private string SetCardAnimationClass()
    {
        string result = String.Empty;
        if (IsCorrect.HasValue)
        {
            result =  IsCorrect.Value ? "card-answer-reveal" : "card-answer-wrong";
        }
        return result;
    }
}
