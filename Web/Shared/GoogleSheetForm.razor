@inject IJSRuntime JS
@inject AppState AppState

<div class="d-flex align-items-center flex-column">

    <div class="card" style="min-width:24rem; max-width:30rem;">
        <div class="card-body">
            <h5>Enter a public google sheet id  (see below)</h5>
            <input type="text"
                   class="form-control"
                   @bind="SheetId"
                   @ref="ReferenceToInputControl"
                   placeholder="e.g. 1drjaaHkOex3jIoP4mhTNoSsCVi9OSouS9NFI601yIKY" />
            <div class="d-flex justify-content-center">
                <button class=" mt-2 btn btn-lg btn-primary" @onclick="GetGoogleSheetId">Start</button>
            </div>
        </div>
    </div>

    <h5 class="mt-4 mb-3 " style="min-width:24rem; max-width:30rem;">The highlighted region of the url in the image below represents the <u>google sheet id</u>.  Make sure your sheet is publicly available and use a two column format to build a custom card deck. 🤓</h5>
    <img  class="sheet-img" src="images/sheet-id.png" />
</div>



@code {

    [Parameter]
    public string SheetId { get; set; } = "16V5nBKof9nm-mWfGP0V8WNxzA6cNibvSskgdjhQY0uc";
    private ElementReference ReferenceToInputControl;


    public void GetGoogleSheetId()
    {
        JS.InvokeVoidAsync("Web.saveToStorage", "sheet-id", SheetId);
        AppState.SetSheetId(SheetId);
    }
}
