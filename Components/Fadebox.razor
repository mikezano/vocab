@inject IJSRuntime JS

<div @ref="_fadeBoxRef" class="fade-box">
    <p>Fading out...</p>
</div>

<h3>@StatusMessage</h3>

@code {
    private ElementReference _fadeBoxRef;
    private DotNetObjectReference<Fadebox>? _dotNetRef;
    private string StatusMessage = "Waiting for animation to end...";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _dotNetRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("animationInterop.onAnimationEnd", _fadeBoxRef, _dotNetRef, nameof(OnAnimationEnd));
        }
    }

    [JSInvokable]
    public void OnAnimationEnd()
    {
        StatusMessage = "Animation has finished!";

        StateHasChanged(); // Refresh UI
    }

    public void Dispose()
    {
        _dotNetRef?.Dispose();
    }
}
